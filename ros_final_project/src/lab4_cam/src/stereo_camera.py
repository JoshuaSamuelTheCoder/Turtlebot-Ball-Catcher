import numpy as np 
import cv2

# from stereo calibration
#projMatr1 = np.matrix([[353.457135, 0.000000, -12954.704506, 0.000000],
#[0.000000, 353.457135, 729.827810, 0.000000],
#[0.000000, 0.000000, 1.000000, 0.000000]])

#projMatr2 = np.matrix([[353.457135, 0.000000, -12954.704506, 1226.682635],
#[0.000000, 353.457135, 729.827810, 0.000000],
#[0.000000, 0.000000, 1.000000, 0.000000]])


#monocular calibration 1 = left 2 = right
projMatr1 = np.matrix([[2581.264404, 0.000000, 620.146289, 0.000000],	
[0.000000, 2670.139648, 342.440882, 0.000000],
[0.000000, 0.000000, 1.000000, 0.000000]])

projMatr2 = np.matrix([[1459.272949, 0.000000, 881.658802, 0.000000],
[0.000000, 1540.477295, 399.274371, 0.000000],
[0.000000, 0.000000, 1.000000, 0.000000]])

projPoints1 = np.array([[0.819,0.862,0.837,0.813,0.784,0.727,0.885,0.911,0.634],[0.853,0.936,0.718,0.420,0.266,0.229,0.19,0.229,0.183]])

projPoints2 = np.array([[0.468,0.424,0.469,0.494,0.469,0.458,0.522,0.606,0.527],[0.449,0.936,0.795,0.645,0.741,0.743,0.415,0.190,0.102]])

points4D = np.matrix([[1,1,1,1,1,1,1,1,1,1]])

#points4D = cv2.triangulatePoints(projMatr1, projMatr2, projPoints1, projPoints2[, points4D])
points4D_sol = cv2.triangulatePoints(projMatr1, projMatr2, projPoints1, projPoints2)

print(points4D_sol)
